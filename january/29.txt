Make document of monez old
----------------------------------------
https://docs.google.com/document/d/1un_WJPg_rwYsJC2nMQxO1TH3zxIA7qIxM-wuaKchFUs/edit?tab=t.u11p3kiddqc0

https://chatgpt.com/c/6799afbe-d8a8-8001-b0f3-3d49e8d7090e









Route::group(['middleware' => 'super_admin'], function () {

   
   
   
    
   
 



    
   
   
   
    
    
   
   
   
   

 

 

  


  

   
    Route::get('accounts', 'DealersController@index')->name('dealers');






    


 

   

 
     /**** FB Black List****/
    Route::resource('fb-black-list', 'FBBlackListController');
    Route::post('/fb-black-list/destroy/multiple', 'FBBlackListController@destroy_multiple')->name('fb_black_list.destroy.multiple');
    Route::post('/fb-black-list/get/vin/dealer', 'FBBlackListController@get_vin_by_dealer')->name('fb_black_list.get.vin.dealer');
     /**** Package Settings Controller ****/
    Route::resource('package-controller', 'PackageSettingsController');
    Route::post('package-controller/get/account/type', 'PackageSettingsController@get_account_type')->name('package_controller.get_account_type');
    Route::post('/package-controller/destroy/multiple', 'PackageSettingsController@destroy_multiple')->name('package.controller.destroy.multiple');
    Route::post('/package-controller/destroy', 'PackageSettingsController@destroy_single')->name('package.controller.destroy');
    /**** Package Settings Controller ****/
    Route::resource('follow-up-settings', 'FollowUpSettingsController');
    Route::post('follow-up-settings-edit', 'FollowUpSettingsController@edit')->name('follow-up-settings.follow_up_edit');
    Route::post('follow-up-settings-store', 'FollowUpSettingsController@store')->name('follow-up-settings.store');
    Route::post('follow-up-settings-follow_up_delete', 'FollowUpSettingsController@delete')->name('follow-up-settings.follow_up_delete');
    Route::post('follow-up-settings-follow_up_delete_multiple', 'FollowUpSettingsController@delete_multiple')->name('follow-up-settings.follow_up_delete_multiple');

    Route::get('follow-up-settings-latest-two', 'FollowUpSettingsController@latest_two')->name('follow-up-settings.latest_two');

    /**** FB posts pending****/

    Route::get('fb-post-pending-mysql-function-call', 'DealersController@fbPendingPostDetailsData')->name('fb.post.pending.mysql.function.call');
    Route::post('get-car-mk-to-update','CarsController@getCarMk')->name('get.car.mk.to.update');
    Route::post('mk-open-in-new-tab','CarsController@open_mk_new_tab')->name('car.mk.open.new.tab');
    /**** AI Conversation ****/
    Route::resource('ai-conversation', 'AIConversationController');
    Route::post('ai-conversation-store', 'AIConversationController@store')->name('ai-conversation.store');
    Route::post('ai-conversation-edit', 'AIConversationController@edit')->name('ai-conversation.edit');
    Route::post('ai-conversation-delete', 'AIConversationController@delete')->name('ai.conversation.delete');
    Route::post('ai-conversation-delete-multiple', 'AIConversationController@delete_multiple')->name('ai.conversation.delete.multiple');
       /**** AI Conversation Keyword ****/
    Route::post('ai-conversation-keywords-show', 'AIConversationController@keywordsShow')->name('ai.conversation.keywords.show');
    Route::get('ai-conversation-keywords-datatable', 'AIConversationController@keywordsDatatable')->name('ai.conversation.keywords.datatable');
    Route::post('ai-conversation-keywords-form', 'AIConversationController@keywordsFormStore')->name('ai.conversation.keywords.form.store');
    Route::post('ai-conversation-keywords-form-edit', 'AIConversationController@keywordsFormEdit')->name('ai.conversation.keywords.form.edit');
    Route::post('ai-conversation-keywords-form-delete', 'AIConversationController@keywordsFormDelete')->name('ai.conversation.keywords.form.delete');
    Route::post('ai-conversation-keywords-form-delete-multiple', 'AIConversationController@keywordsFormDeleteMultiple')->name('ai.conversation.keywords.form.delete.multiple');
    /**** QR Fuel Controller ****/
    Route::resource('qr-fuel-control', 'QRfuelController');
    Route::post('qr/fuel/control/qr/check', 'QRfuelController@qr_id_check')->name('qr.fuel.id.check');
    Route::post('qr-fuel-control-edit', 'QRfuelController@qr_fuel_edit')->name('qr-fuel-control.qr_fuel_edit');
    Route::post('qr-fuel-control-delete', 'QRfuelController@delete')->name('qr-fuel-control.delete');
    Route::post('qr-fuel-control-delete-multiple', 'QRfuelController@delete_multiple')->name('qr-fuel-control.multiple.delete');
    Route::get('qr-fuel-control-bar-chart', 'QRfuelController@draw_bar_chart')->name('qr-fuel-control.bar.chart');
    Route::resource('qr-fuel-setting', 'DealerQrFuelSettingController');
    Route::get('check-redirect-email-by-dealer/{dealer_id}', 'DealerQrFuelSettingController@checkRedirectEmailByDealer')->name('check-redirect-email-by-dealer');

    Route::resource('vehicle-makes.models', 'VehicleModelController', [
        'except' => ['show']
    ])
    ->parameters([
        'vehicle-makes' => 'make'
    ]);

    Route::resource('vehicle-makes', 'VehicleMakeController', [
        'except' => ['show']
    ])
    ->parameters([
        'vehicle-makes' => 'make'
    ]);

    Route::resource('user-logs', 'UserLogController', ['names' =>
        [
            'index' => 'user-logs',
        ]
    ]);

    Route::post('/dealers/flush', 'DealersController@flushData')->name('dealers.flush');
    Route::post('/dealers/flush-multiple', 'DealersController@flushDataMultiple')->name('dealers.flush-multiple');

    Route::get('/get-ftp-file', 'DealersController@getFtpFile')->name('dealers.get-ftp-file');
    Route::get('/get-remote-ftp-file', 'DealersController@getRemoteFtpFile')->name('dealers.get-remote-ftp-file');

    # Expense fields features routes
    Route::prefix("accounts/expenses")->name("accounts.expenses.")->group(function (){
        Route::get("/", "ExpenseFieldsController@manage")->name("manage");
        Route::post("/store", "ExpenseFieldsController@store")->name("store");
        Route::put("/update", "ExpenseFieldsController@update")->name("update");
        Route::delete("/{expense}/delete", "ExpenseFieldsController@delete")->name("delete");
    });
    Route::get('/onetime-operation', 'HomeController@onetimeOperation')->name('onetime-operation');
    Route::get('/dealers/{dealerId}/cars/{carId}/delete', 'CarsController@forceDelete')->name('cars.force.delete')->where('id', '[0-9]+');

    Route::get('wp-emergency-push', 'DealersController@wpEmergencyPush')->middleware('super_admin')->name("dealers.wp-emergency-push");
    Route::post('wp-emergency-push-submit', 'DealersController@wpEmergencyPushSubmit')->middleware('super_admin')->name("dealers.wp-emergency-push-submit");

    Route::get('/dealers/{dealer}/fb-vehicles-post-fetch', 'DealersController@fetchFbVehiclesPost')->name('dealers.fetch.fbVehiclesPost');
    Route::get('/dealers/{dealer}/Google-post-fetch', 'DealersController@fetchGooglePosts')->name('dealers.fetch.googlePosts');
    Route::post('/dealers/fb-vehicles-post-delete', 'DealersController@fetchFbVehiclesPostDelete')->name('dealers.fetch.fbVehiclesPostDelete');
    Route::post('/dealers/fb-vehicles-post-force-refresh', 'DealersController@fetchFbVehiclesPostForceRefresh')->name('dealers.fetch.fetchFbVehiclesPostForceRefresh');
    Route::post('/dealers/fb-items-post-force-refresh', 'DealersController@fetchFbItemsPostForceRefresh')->name('dealers.fetch.fetchFbItemsPostForceRefresh');
    Route::post('/dealers/google-post-delete', 'DealersController@fetchGooglePostDelete')->name('dealers.fetch.googlePostDelete');
    Route::get('/car-show-fb-posts', 'DealersController@carsShowFBPosts')->name('cars.show.fb-posts');
    Route::get('/car-show-google-post', 'DealersController@carsGooglePost')->name('cars.show.google-post');

    Route::post('/facebook/post-status-update', 'FacebookOtherPost@postStatusUpdate')->name('facebook.postStatusUpdate');

    Route::post("dealers/posts/update/mk", 'FacebookOtherPost@updateMkNumber')->name('dealers.posts.update.mk');
    Route::prefix("dealers/posts/others")->name('dealers.posts.others.')->group(function(){
        Route::get('/fetch', 'FacebookOtherPost@fetch')->name('fetch');
        Route::post('/destroy', 'FacebookOtherPost@destroy')->name('destroy');
        Route::get('/statuses/fetch', 'FacebookOtherPost@fetchStatuses')->name('statuses.fetch');
    });

    Route::prefix('settings')->name('settings.')->group(function () {
        Route::get("/", "SettingsController@manage")->name("manage");
        Route::post("/", "SettingsController@update")->name("update");
    });

    Route::prefix('tools')->name('tools.')->group(function () {
        Route::get('/', 'ToolsController@index')->name('index');
        Route::get('/laravel-logs', 'ToolsController@laravelLogs')->name('laravel-logs');
        Route::post('/laravel-logs-download', 'ToolsController@laravelLogsDownload')->name('laravel-logs-download');
        Route::get('/jobs', 'ToolsController@jobs')->name('jobs');
        Route::get('/dealers', 'ToolsController@dealers')->name('dealers');
        Route::get('/reports', 'ToolsController@reports')->name('reports');
    });

    Route::get('/mk-boost-log', 'DealersController@mkBoostLog')->name('dealers.mk-boost-log');

    Route::resource('gmb-worker', 'GmbWorkerController', ['names' =>
        [
            'index' => 'gmb-worker',
        ]
    ]);

    Route::get('/impact-cielocom-log', 'DealersController@impactCielocomLog')->name('dealers.impact-cielocom-log');
    Route::get('/sms-log', 'DealersController@smsLog')->name('dealers.sms-log');
    Route::get('/ocr-log', 'OCRLogController@index')->name('ocr-log');
    Route::get('/ocr-log/show/{car_id}/{dealer_id}', 'OCRLogController@show')->name('ocr-log.show');
    Route::get('/preorder-log', 'PreorderLogController@index')->name('preorder-log');
    Route::get('/ocr-log/show/{preorder_id}', 'PreorderLogController@show')->name('preorder-log.show');
    Route::post('/sync-old-cars', 'FbJobsController@syncOldCars')->name('sync-old-cars');


    Route::prefix("dealers")->name("dealers.")->group(function (){

        Route::get('google-post/api/active-status/fetch', 'DealersController@fetchGooglePostStatuses')->name('google.post.api.active-status.fetch');
        // Route::get('fb-mk-error', function (){
        //     return view('dealers.fb-mk-error');
        // })->name('fbMkError');

        Route::get('fb-mk-error', 'DealersController@showFbPostsMkError')->name('fbMkError');

        Route::get('fb-app-log', 'DealersController@showFbAppLog')->name('fbAppLog');
        Route::delete('fb-app-log/delete/{id}', 'DealersController@destroyFbAppLog')->name('fbAppLog.destroy');

        Route::get('fb-app-blocks', 'FbAppBlocksController@showFbAppBlocks')->name('fbAppBlocks');
        Route::post('fb-app-blocks/update', 'FbAppBlocksController@updateFbAppBlocks')->name('fbAppBlocks.update');
        Route::post('fb-app-blocks/edit', 'FbAppBlocksController@editFbAppBlocks')->name('fbAppBlocks.edit');
        Route::post('fb-app-blocks-delete-multiple', 'FbAppBlocksController@deleteMultipleFbAppBlocks')->name('fbAppBlocks.delete.multiple');


        Route::get('fb-posts-item', 'DealersController@showFbPostsItem')->name('fbPostsItem');
        Route::get('fb-item-mk-error', function (){
            return view('dealers.fb-item-mk-error');
        })->name('fbItemMkError');

        Route::get('fb-missed-models', 'MissedFBModelController@manage')->name('missedFBModel');
        Route::get('fb-missed-models/create', 'MissedFBModelController@create')->name('missedFBModel.create');
        Route::post('fb-missed-models/store', 'MissedFBModelController@store')->name('missedFBModel.store');
        Route::get('fb-missed-models/{id}/edit', 'MissedFBModelController@edit')->name('missedFBModel.edit');
        Route::put('fb-missed-models/{id}/update', 'MissedFBModelController@update')->name('missedFBModel.update');
        Route::patch('fb-missed-models/patch', 'MissedFBModelController@patch')->name('missedFBModel.patch');
        Route::delete('fb-missed-models/{id}/destroy', 'MissedFBModelController@destroy')->name('missedFBModel.destroy');
        Route::post('fb-missed-models/errors/store', 'MissedFBModelController@addErrors')->name('missedFBModel.errors.store');

        Route::get('fb-leads-autoreply', 'FbLeadsAutoReplyController@manage')->name('leadsAutoReply');
        Route::get('fetch-leads-autoreply', 'FbLeadsAutoReplyController@fetch')->name('leadsAutoReplyFetch');

        Route::get('lead-stats', 'FbLeadsController@manage')->name('fbLeads');
        Route::get('fetch-leads', 'FbLeadsController@fetch')->name('fbLeadsFetch');

        Route::post('verify/password/dealer/create/server/ip','DealersController@verify_super_admin_password')->name('verify.password.dealer.create.server.ip');
        Route::get('fb-app-log-ten-data', 'DealersController@showFbAppLogTopTen')->name('fbapplog.ten.data');
    });
    Route::get('/invoice-log', 'InvoiceLogController@index')->name('invoice-log.index');
    Route::get('/invoice-log/{id}', 'InvoiceLogController@show')->name('invoice-log.show');

});